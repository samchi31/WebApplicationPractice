<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.prod.dao.ProdDAO">
	<sql id="searchFrag">
		<trim prefix=" WHERE " prefixOverrides="AND">
		    <if test="detailCondition neq null">
		    	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodLgu)">
		    		AND PROD_LGU = #{detailCondition.prodLgu}
		    	</if>
		    	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodBuyer)">
		    		AND PROD_BUYER = #{detailCondition.prodBuyer}
		    	</if>
		    	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailCondition.prodName)">
		    		AND INSTR(PROD_NAME, #{detailCondition.prodName}) > 0
		    	</if>
		    </if>
	    </trim>
	</sql>
	<select id="selectTotalRecord" parameterType="PagingVO" resultType="int">
		SELECT COUNT(*)
		FROM PRODVIEW
		<include refid="searchFrag" />
	</select>
<!-- 	<resultMap type="ProdVO" id="listMap" autoMapping="true"> -->
<!-- 		<association property="buyer" javaType="BuyerVO"> -->
<!-- 			<result property="buyerName" column="BUYER_NAME"/> -->
<!-- 		</association> -->
<!-- 	</resultMap> -->
	<select id="selectProdList" parameterType="PagingVO" resultType="ProdVO">
		WITH ORDEREDPROD AS (
		    SELECT PROD_ID, PROD_NAME, PROD_COST, PROD_PRICE
		        , LPROD_NM
		        , BUYER_NAME "buyer.buyerName"
		        , (
		            SELECT COUNT(DISTINCT CART_MEMBER) FROM CART
		            WHERE CART_PROD = PROD_ID
		        ) MEM_COUNT
		    FROM PRODVIEW
		    <include refid="searchFrag" />
		    ORDER BY PROD_LGU, ROWID DESC
		)
		SELECT A.*
		FROM (
		    SELECT ROWNUM RNUM, ORDEREDPROD.*
		    FROM ORDEREDPROD
		) A
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>

	<resultMap type="ProdVO" id="prodMap" autoMapping="true">
		<id property="prodId" column="PROD_ID"/>
		<association property="buyer" javaType="BuyerVO" autoMapping="true" />
		<collection property="memberSet" ofType="MemberVO" autoMapping="true">
			<id property="memId" column="MEM_ID"/>
		</collection>
	</resultMap>

	<select id="selectProd" parameterType="string" resultMap="prodMap">
		WITH CARTVIEW AS (
		    SELECT CART_PROD
		        , MEM_ID, MEM_NAME, MEM_HP, MEM_MAIL, MEM_MILEAGE
		    FROM CART INNER JOIN MEMBER ON (CART_MEMBER = MEM_ID)
		)
		SELECT
		    PROD_ID,    PROD_NAME,    PROD_LGU,
		    PROD_BUYER,    PROD_COST,    PROD_PRICE,
		    PROD_SALE,    PROD_OUTLINE,    PROD_DETAIL,
		    PROD_IMG,    PROD_TOTALSTOCK,    
		    TO_CHAR(PROD_INSDATE, 'YYYY-MM-DD') PROD_INSDATE,
		    PROD_PROPERSTOCK,    PROD_SIZE,    PROD_COLOR,
		    PROD_DELIVERY,    PROD_UNIT,    PROD_QTYIN,
		    PROD_QTYSALE,    PROD_MILEAGE
		    , LPROD_NM
		    , BUYER_NAME, BUYER_ADD1, BUYER_CHARGER
		    , CARTVIEW.*
		FROM   PRODVIEW LEFT OUTER JOIN CARTVIEW ON (PROD_ID = CART_PROD)
		WHERE PROD_ID = #{prodId}
	</select>
	<insert id="insertProd" parameterType="ProdVO">
		<selectKey order="BEFORE" resultType="string" keyProperty="prodId">
			SELECT #{prodLgu,jdbcType=CHAR}||
		    	LPAD(NVL(TO_NUMBER(SUBSTR(MAX(PROD_ID), 5)), 0)+1, 6, '0')
		    FROM PROD
			WHERE PROD_LGU = #{prodLgu,jdbcType=CHAR}	
		</selectKey>
		INSERT INTO PROD(
			PROD_ID
			, PROD_NAME
			, PROD_LGU
			, PROD_BUYER
			, PROD_COST
			, PROD_PRICE
			, PROD_SALE
			, PROD_OUTLINE
			, PROD_DETAIL
			, PROD_IMG
			, PROD_TOTALSTOCK
			, PROD_INSDATE
			, PROD_PROPERSTOCK
			, PROD_SIZE
			, PROD_COLOR
			, PROD_DELIVERY
			, PROD_UNIT
			, PROD_QTYIN
			, PROD_QTYSALE
			, PROD_MILEAGE
		)VALUES(
			#{prodId}
		    , #{prodName,jdbcType=VARCHAR}
			, #{prodLgu,jdbcType=CHAR}
			, #{prodBuyer,jdbcType=CHAR}
			, #{prodCost,jdbcType=NUMERIC}
			, #{prodPrice,jdbcType=NUMERIC}
			, #{prodSale,jdbcType=NUMERIC}
			, #{prodOutline,jdbcType=VARCHAR}
			, #{prodDetail,jdbcType=CLOB}
			, #{prodImg,jdbcType=VARCHAR}
			, #{prodTotalstock,jdbcType=NUMERIC}
			, TO_DATE(#{prodInsdate,jdbcType=DATE}, 'YYYY-MM-DD')
			, #{prodProperstock,jdbcType=NUMERIC}
			, #{prodSize,jdbcType=VARCHAR}
			, #{prodColor,jdbcType=VARCHAR}
			, #{prodDelivery,jdbcType=VARCHAR}
			, #{prodUnit,jdbcType=VARCHAR}
			, #{prodQtyin,jdbcType=NUMERIC}
			, #{prodQtysale,jdbcType=NUMERIC}
			, #{prodMileage,jdbcType=NUMERIC}
		)
	</insert>
	<update id="updateProd" parameterType="ProdVO">
		UPDATE PROD
		SET
			PROD_COST = #{prodCost,jdbcType=NUMERIC}
			, PROD_PRICE = #{prodPrice,jdbcType=NUMERIC}
			, PROD_SALE = #{prodSale,jdbcType=NUMERIC}
			, PROD_OUTLINE = #{prodOutline,jdbcType=VARCHAR}
			, PROD_DETAIL = #{prodDetail,jdbcType=CLOB}
			, PROD_TOTALSTOCK = #{prodTotalstock,jdbcType=NUMERIC}
			, PROD_INSDATE = TO_DATE(#{prodInsdate,jdbcType=DATE}, 'YYYY-MM-DD')
			, PROD_PROPERSTOCK = #{prodProperstock,jdbcType=NUMERIC}
			, PROD_SIZE = #{prodSize,jdbcType=VARCHAR}
			, PROD_COLOR = #{prodColor,jdbcType=VARCHAR}
			, PROD_DELIVERY = #{prodDelivery,jdbcType=VARCHAR}
			, PROD_UNIT = #{prodUnit,jdbcType=VARCHAR}
			, PROD_QTYIN = #{prodQtyin,jdbcType=NUMERIC}
			, PROD_QTYSALE = #{prodQtysale,jdbcType=NUMERIC}
			, PROD_MILEAGE = #{prodMileage,jdbcType=NUMERIC}
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(prodImg)">
			, PROD_IMG = #{prodImg,jdbcType=VARCHAR}
			</if>
		WHERE PROD_ID = #{prodId,jdbcType=VARCHAR}
	</update>
</mapper>
















