<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.member.dao.MemberDAO">

	<!-- code fragment -->
	<sql id="searchFrag">
		<where>
			<if test="simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
				<choose>
					<when test="simpleCondition.searchType eq 'name'">
						INSTR(MEM_NAME, #{simpleCondition.searchWord}) > 0
					</when>
					<when test="simpleCondition.searchType eq 'address'">
						INSTR(MEM_ADD1, #{simpleCondition.searchWord}) > 0
					</when>
					<otherwise>
						INSTR(MEM_NAME, #{simpleCondition.searchWord}) > 0
						OR 	
						INSTR(MEM_ADD1, #{simpleCondition.searchWord}) > 0
					</otherwise>
				</choose>				
			</if>
		</where>
	</sql>
	
	<select id="selectTotalRecord" resultType="int" parameterType="PagingVO">
		SELECT	COUNT(*)
		FROM	MEMBER	
		<include refid="searchFrag" />
	</select>

	<select id="selectMemberList" resultType="MemberVO" parameterType="PagingVO">		
		SELECT	B.*
		FROM	(
			SELECT	A.*, ROWNUM AS RNUM
			FROM	(		
				SELECT MEM_ID, MEM_NAME, MEM_MAIL, MEM_HP, MEM_ADD1, MEM_MILEAGE 
				, (
				    SELECT  COUNT(DISTINCT CART_PROD) AS CART_COUNT
				    FROM    CART	
				    WHERE	CART_MEMBER = MEM_ID
				)
				FROM MEMBER	
				<include refid="searchFrag" />
				ORDER BY ROWID DESC)	A
		)	B
		<![CDATA[
		WHERE RNUM >= #{startRow} AND RNUM <= #{endRow}
		]]>
	</select>
	
	<resultMap type="MemberVO" id="memberMap" autoMapping="true">
		<id property="memId" column="MEM_ID" />
		<collection property="prodList" ofType="ProdVO" autoMapping="true">
			<association property="buyer" javaType="BuyerVO" autoMapping="true" />
		</collection>	
	</resultMap>
	
	<select id="selectMember" parameterType="String" resultMap="memberMap">
		WITH CARTVIEW AS (
			SELECT	DISTINCT CART_MEMBER, CART_PROD
			FROM	CART
		), CARTPROD AS (
			SELECT	CART_MEMBER
					, PRODVIEW.*
			FROM 	CARTVIEW INNER JOIN PRODVIEW ON (CART_PROD = PROD_ID)
		)
		SELECT 
		    MEM_ID
		    ,    MEM_PASS
		    ,    MEM_NAME
		    , 	 MEM_REGNO1
		    ,    MEM_REGNO2
		    ,    TO_CHAR(MEM_BIR, 'YYYY-MM-DD')  MEM_BIR
		    ,	 MEM_ZIP
		    ,    MEM_ADD1
		    ,    MEM_ADD2
		    ,	 MEM_HOMETEL
		    ,    MEM_COMTEL
		    ,    MEM_HP
		    ,    MEM_MAIL
		    ,    MEM_JOB
		    ,    MEM_LIKE
		    ,    MEM_MEMORIAL
		    ,    TO_CHAR(MEM_MEMORIALDAY, 'YYYY-MM-DD') MEM_MEMORIALDAY
		    ,    MEM_MILEAGE
		    ,    MEM_DELETE
		    ,	 MEM_ROLE
		    ,	 MEM_IMG
		    , 	 PROD_ID, PROD_NAME, PROD_COST, PROD_PRICE, PROD_MILEAGE
		    ,	 LPROD_NM, BUYER_NAME, BUYER_ADD1, BUYER_CHARGER
		FROM    MEMBER	LEFT OUTER JOIN CARTPROD ON (MEM_ID = CART_MEMBER)
		WHERE MEM_ID = #{memId}
	</select>
	
	<insert id="insertMember" parameterType="MemberVO">
		INSERT INTO member (
		    mem_id,
		    mem_pass,
		    mem_name,
		    mem_regno1,
		    mem_regno2,
		    mem_bir,
		    mem_zip,
		    mem_add1,
		    mem_add2,
		    mem_hometel,
		    mem_comtel,
		    mem_hp,
		    mem_mail,
		    mem_job,
		    mem_like,
		    mem_memorial,
		    mem_memorialday
		    <if test="memImg neq null and memImg.length gt 0">
		    , mem_img		    
		    </if>
		) VALUES (
		 	#{memId, jdbcType=VARCHAR}
			, #{memPass, jdbcType=VARCHAR}
			, #{memName, jdbcType=VARCHAR}
			, #{memRegno1, jdbcType=CHAR}
			, #{memRegno2, jdbcType=CHAR}
			, TO_DATE(#{memBir, jdbcType=DATE}, 'YYYY-MM-DD')
			, #{memZip, jdbcType=CHAR}
			, #{memAdd1, jdbcType=VARCHAR}
			, #{memAdd2, jdbcType=VARCHAR}
			, #{memHometel, jdbcType=VARCHAR}
			, #{memComtel, jdbcType=VARCHAR}
			, #{memHp, jdbcType=VARCHAR}
			, #{memMail, jdbcType=VARCHAR}
			, #{memJob, jdbcType=VARCHAR}
			, #{memLike, jdbcType=VARCHAR}
			, #{memMemorial, jdbcType=VARCHAR}
			, TO_DATE(#{memMemorialday, jdbcType=DATE}, 'YYYY-MM-DD')
			<if test="memImg neq null and memImg.length gt 0">
		    , #{memImg, jdbcType=BLOB}		    
		    </if>
		)
	</insert>
	
	<update id="updateMember" parameterType="MemberVO">
		UPDATE member
		   SET
			mem_regno1 = #{memRegno1, jdbcType=CHAR}
			, mem_regno2 = #{memRegno2, jdbcType=CHAR}
			, mem_zip = #{memZip, jdbcType=CHAR}
			, mem_add1 = #{memAdd1, jdbcType=VARCHAR}
			, mem_add2 = #{memAdd2, jdbcType=VARCHAR}
			, mem_hometel = #{memHometel, jdbcType=VARCHAR}
			, mem_comtel = #{memComtel, jdbcType=VARCHAR}
			, mem_hp = #{memHp, jdbcType=VARCHAR}
			, mem_mail = #{memMail, jdbcType=VARCHAR}
			, mem_job = #{memJob, jdbcType=VARCHAR}
			, mem_like = #{memLike, jdbcType=VARCHAR}
			, mem_memorial = #{memMemorial, jdbcType=VARCHAR}
			, mem_memorialday = TO_DATE(#{memMemorialday, jdbcType=DATE}, 'YYYY-MM-DD')
			<if test="memImg neq null and memImg.length gt 0">
		    , mem_img = #{memImg, jdbcType=BLOB}		    
		    </if>
		WHERE
		    mem_id = #{memId, jdbcType=VARCHAR}
	</update>
	
	<delete id="deleteMember" parameterType="String">
		UPDATE member
		SET		mem_delete = '1'
		WHERE  mem_id = #{memId}
	</delete>
</mapper>